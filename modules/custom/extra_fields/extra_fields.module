<?php

/**
 * Implements hook_field_extra_fields().
 */

function extra_fields_field_extra_fields() {
  $extra = array();
  foreach (node_type_get_types() as $type) {
    if ($type->has_title) {
      $extra['node'][$type->type]['display']['title'] = array(
        'label' => t('Extra field: !title', array('!title' => $type->title_label)),
        'weight' => -4,
        'type' => 'hidden',
      );
    }
  }
 
  //Taxonomy
  $info = entity_get_info('taxonomy_term');
  foreach (array_keys($info['bundles']) as $bundle) {
    $extra['taxonomy_term'][$bundle] = array(
      'display' => array(
        'title' => array(
          'label' => t('Extra Field: Title'),
          'weight' => 0,
          'type' => 'hidden',
        ),
      ),
    );
    if($bundle == 'initiatives'){
      $extra['taxonomy_term'][$bundle]['display']['faq_link'] = array(
            'label' => t('Extra Field: FAQ Link'),
            'weight' => 0,
            'type' => 'hidden',
      );  
      $extra['taxonomy_term'][$bundle]['display']['activities_link'] = array(
            'label' => t('Extra Field: Activities Link'),
            'weight' => 0,
            'type' => 'hidden',
      );  
    }
  }
  
  return $extra;
}

/**
 * Implements hook_node_view().
 */
function extra_fields_node_view($node, $view_mode, $langcode) {
  // only return this in a non-full page situation
  if (!in_array($view_mode, array('default', 'full'))) {
    $node->content['title'] = array(
      '#theme' => 'extra_fields_title',
      '#node' => $node,
      '#view_mode' => $view_mode,
    ); 
  }
  if (in_array($view_mode, array('default', 'full'))) {
    $node->content['title'] = array(
      '#theme' => 'extra_fields_title_nolink',
      '#node' => $node,
      '#view_mode' => $view_mode,
    );  
  }
}

function extra_fields_taxonomy_term_view($term, $view_mode, $langcode) {
    if($term->vocabulary_machine_name == 'initiatives' && in_array($view_mode, array('full'))){
        $term->content['faq_link'] = array(
            '#theme' => 'extra_fields_term_faq_link',
            '#term' => $term,
            '#view_mode' => $view_mode,
        );
        $term->content['activities_link'] = array(
            '#theme' => 'extra_fields_term_activities_link',
            '#term' => $term,
            '#view_mode' => $view_mode,
        );
    }
    if(in_array($view_mode, array('taxonomy_card','taxonomy_front'))){
        $term->content['title'] = array(
            '#theme' => 'extra_fields_term_title',
            '#term' => $term,
            '#view_mode' => $view_mode,
        );
    }
}

/**
 * Implements hook_theme().
 */
function extra_fields_theme($existing, $type, $theme, $path) {
  return array(
    'extra_fields_title' => array(
      'variables' => array('node' => NULL, 'view_mode' => NULL),
    ),
    'extra_fields_title_nolink' => array(
      'variables' => array('node' => NULL, 'view_mode' => NULL),
    ),
    'extra_fields_term_title' => array(
      'variables' => array('term' => NULL, 'view_mode' => NULL),
    ),
    'extra_fields_term_faq_link' => array(
      'variables' => array('term' => NULL, 'view_mode' => NULL),
    ),
    'extra_fields_term_activities_link' => array(
      'variables' => array('term' => NULL, 'view_mode' => NULL),
    ),
  );
}

function theme_extra_fields_term_title($variables){
    $term = $variables['term'];
    $name = $term->name;
    $entity_uri = entity_uri('taxonomy_term', $term);
    $output = '<h2 class="taxonomy-title">';
    $output .= l($name, $entity_uri['path']);
    $output .= '</h2>';
    return $output;
}

function theme_extra_fields_term_faq_link($variables){
    $term = $variables['term'];
    $name = $term->name;
    $current_path = drupal_get_path_alias();
    $output = '';
    if(!empty($term->field_faq[LANGUAGE_NONE])){
        $output = l('FAQ', '/' . $current_path . '/faq');
    }
    return $output;
}
// @todo add logic to detect if view is not empty before displaying link.
function theme_extra_fields_term_activities_link($variables){
    $term = $variables['term'];
    $name = $term->name;
    $current_path = drupal_get_path_alias();
    $output = l('Initiative Activities', '/' . $current_path . '/activities');
    return $output;
}

function theme_extra_fields_title($variables) {
  $node = $variables['node'];
  $view_mode = $variables['view_mode'];
  $entity_uri = entity_uri('node', $node);
  $link_title = l($node->title, $entity_uri['path']);
  
  if($node->type == 'group_networks'){
      $link_title = $node->title;
  }
  
  $output = '<h2 class="node-title">';
  $output .= $link_title;
  $output .= '</h2>';
  return $output;
}

function theme_extra_fields_title_nolink($variables) {
  $node = $variables['node'];
  $link_title = $node->title;
  
  $output = '<h2 class="node-title">';
  $output .= $link_title;
  $output .= '</h2>';
  return $output;
}

/* Features implementation for exporting extra fields information */

/**
 * Implements hook_features_api.
 */
function extra_fields_features_api() {
  return array(
    'extra_fields' => array(
      'name' => t('Extra fields'),
      'default_hook' => 'extra_fields_info',
      'default_file' => FEATURES_DEFAULTS_INCLUDED,
      'features_source' => TRUE,
      'file' => drupal_get_path('module', 'extra_fields') .'/extra_fields.features.inc',
    ),
  );
}